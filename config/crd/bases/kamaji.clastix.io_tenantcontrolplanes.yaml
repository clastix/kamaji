
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: tenantcontrolplanes.kamaji.clastix.io
spec:
  group: kamaji.clastix.io
  names:
    kind: TenantControlPlane
    listKind: TenantControlPlaneList
    plural: tenantcontrolplanes
    shortNames:
    - tcp
    singular: tenantcontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Kubernetes version
      jsonPath: .spec.kubernetes.version
      name: Version
      type: string
    - description: Kubernetes version
      jsonPath: .status.kubernetesResources.version.status
      name: Status
      type: string
    - description: Tenant Control Plane Endpoint (API server)
      jsonPath: .status.controlPlaneEndpoint
      name: Control-Plane-Endpoint
      type: string
    - description: Secret which contains admin kubeconfig
      jsonPath: .status.kubeconfig.admin.secretName
      name: Kubeconfig
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TenantControlPlane is the Schema for the tenantcontrolplanes
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantControlPlaneSpec defines the desired state of TenantControlPlane.
            properties:
              addons:
                description: Addons contain which addons are enabled
                properties:
                  coreDNS:
                    description: AddonSpec defines the spec for every addon.
                    type: object
                  konnectivity:
                    description: KonnectivitySpec defines the spec for Konnectivity.
                    properties:
                      agentImage:
                        default: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent
                        description: AgentImage defines the container image for Konnectivity's
                          agent.
                        type: string
                      allowAddressAsExternalIP:
                        type: boolean
                      proxyHost:
                        description: Host of Konnectivity proxy server.
                        type: string
                      proxyPort:
                        description: Port of Konnectivity proxy server.
                        format: int32
                        type: integer
                      resources:
                        description: Resources define the amount of CPU and memory
                          to allocate to the Konnectivity server.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      serverImage:
                        default: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server
                        description: ServerImage defines the container image for Konnectivity's
                          server.
                        type: string
                      serviceType:
                        description: ServiceType allows specifying how to expose the
                          Konnectivity Proxy Server.
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                        type: string
                      version:
                        default: v0.0.31
                        description: Version for Konnectivity server and agent.
                        type: string
                    required:
                    - proxyPort
                    - serviceType
                    type: object
                  kubeProxy:
                    description: AddonSpec defines the spec for every addon.
                    type: object
                type: object
              controlPlane:
                description: ControlPlane defines how the Tenant Control Plane Kubernetes
                  resources must be created in the Admin Cluster, such as the number
                  of Pod replicas, the Service resource, or the Ingress.
                properties:
                  deployment:
                    description: Defining the options for the deployed Tenant Control
                      Plane as Deployment resource.
                    properties:
                      additionalMetadata:
                        description: AdditionalMetadata defines which additional metadata,
                          such as labels and annotations, must be attached to the
                          created resource.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      replicas:
                        default: 2
                        format: int32
                        type: integer
                      resources:
                        description: Resources defines the amount of memory and CPU
                          to allocate to each component of the Control Plane (kube-apiserver,
                          controller-manager, and scheduler).
                        properties:
                          apiServer:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          controllerManager:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          scheduler:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                        type: object
                    type: object
                  ingress:
                    description: Defining the options for an Optional Ingress which
                      will expose API Server of the Tenant Control Plane
                    properties:
                      additionalMetadata:
                        description: AdditionalMetadata defines which additional metadata,
                          such as labels and annotations, must be attached to the
                          created resource.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      enabled:
                        type: boolean
                      hostname:
                        description: Hostname is an optional field which will be used
                          as Ingress's Host. If it is not defined, Ingress's host
                          will be "<tenant>.<namespace>.<domain>", where domain is
                          specified under NetworkProfileSpec
                        type: string
                      ingressClassName:
                        type: string
                    required:
                    - enabled
                    type: object
                  service:
                    description: Defining the options for the Tenant Control Plane
                      Service resource.
                    properties:
                      additionalMetadata:
                        description: AdditionalMetadata defines which additional metadata,
                          such as labels and annotations, must be attached to the
                          created resource.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      serviceType:
                        description: ServiceType allows specifying how to expose the
                          Tenant Control Plane.
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                        type: string
                    required:
                    - serviceType
                    type: object
                required:
                - service
                type: object
              kubernetes:
                description: Kubernetes specification for tenant control plane
                properties:
                  admissionControllers:
                    default:
                    - CertificateApproval
                    - CertificateSigning
                    - CertificateSubjectRestriction
                    - DefaultIngressClass
                    - DefaultStorageClass
                    - DefaultTolerationSeconds
                    - LimitRanger
                    - MutatingAdmissionWebhook
                    - NamespaceLifecycle
                    - PersistentVolumeClaimResize
                    - Priority
                    - ResourceQuota
                    - RuntimeClass
                    - ServiceAccount
                    - StorageObjectInUseProtection
                    - TaintNodesByCondition
                    - ValidatingAdmissionWebhook
                    description: 'List of enabled Admission Controllers for the Tenant
                      cluster. Full reference available here: https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers'
                    items:
                      enum:
                      - AlwaysAdmit
                      - AlwaysDeny
                      - AlwaysPullImages
                      - CertificateApproval
                      - CertificateSigning
                      - CertificateSubjectRestriction
                      - DefaultIngressClass
                      - DefaultStorageClass
                      - DefaultTolerationSeconds
                      - DenyEscalatingExec
                      - DenyExecOnPrivileged
                      - DenyServiceExternalIPs
                      - EventRateLimit
                      - ExtendedResourceToleration
                      - ImagePolicyWebhook
                      - LimitPodHardAntiAffinityTopology
                      - LimitRanger
                      - MutatingAdmissionWebhook
                      - NamespaceAutoProvision
                      - NamespaceExists
                      - NamespaceLifecycle
                      - NodeRestriction
                      - OwnerReferencesPermissionEnforcement
                      - PersistentVolumeClaimResize
                      - PersistentVolumeLabel
                      - PodNodeSelector
                      - PodSecurity
                      - PodSecurityPolicy
                      - PodTolerationRestriction
                      - Priority
                      - ResourceQuota
                      - RuntimeClass
                      - SecurityContextDeny
                      - ServiceAccount
                      - StorageObjectInUseProtection
                      - TaintNodesByCondition
                      - ValidatingAdmissionWebhook
                      type: string
                    type: array
                  kubelet:
                    properties:
                      cgroupfs:
                        description: CGroupFS defines the  cgroup driver for Kubelet
                          https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/configure-cgroup-driver/
                        enum:
                        - systemd
                        - cgroupfs
                        type: string
                    type: object
                  version:
                    description: Kubernetes Version for the tenant control plane
                    type: string
                required:
                - kubelet
                - version
                type: object
              networkProfile:
                description: NetworkProfile specifies how the network is
                properties:
                  address:
                    description: Address where API server of will be exposed. In case
                      of LoadBalancer Service, this can be empty in order to use the
                      exposed IP provided by the cloud controller manager.
                    type: string
                  allowAddressAsExternalIP:
                    description: AllowAddressAsExternalIP will include tenantControlPlane.Spec.NetworkProfile.Address
                      in the section of ExternalIPs of the Kubernetes Service (only
                      ClusterIP or NodePort)
                    type: boolean
                  certSANs:
                    description: CertSANs sets extra Subject Alternative Names (SANs)
                      for the API Server signing certificate. Use this field to add
                      additional hostnames when exposing the Tenant Control Plane
                      with third solutions.
                    items:
                      type: string
                    type: array
                  dnsServiceIPs:
                    default:
                    - 10.96.0.10
                    items:
                      type: string
                    type: array
                  podCidr:
                    default: 10.244.0.0/16
                    description: CIDR for Kubernetes Pods
                    type: string
                  port:
                    default: 6443
                    description: Port where API server of will be exposed
                    format: int32
                    type: integer
                  serviceCidr:
                    default: 10.96.0.0/16
                    description: Kubernetes Service
                    type: string
                type: object
            required:
            - controlPlane
            - kubernetes
            type: object
          status:
            description: TenantControlPlaneStatus defines the observed state of TenantControlPlane.
            properties:
              addons:
                description: Addons contains the status of the different Addons
                properties:
                  coreDNS:
                    description: AddonStatus defines the observed state of an Addon.
                    properties:
                      checksum:
                        type: string
                      enabled:
                        type: boolean
                      lastUpdate:
                        format: date-time
                        type: string
                    required:
                    - enabled
                    type: object
                  konnectivity:
                    description: KonnectivityStatus defines the status of Konnectivity
                      as Addon.
                    properties:
                      agent:
                        properties:
                          lastUpdate:
                            description: Last time when k8s object was updated
                            format: date-time
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          resourceVersion:
                            description: Resource version of k8s object
                            type: string
                        type: object
                      certificate:
                        description: CertificatePrivateKeyPairStatus defines the status.
                        properties:
                          lastUpdate:
                            format: date-time
                            type: string
                          resourceVersion:
                            type: string
                          secretName:
                            type: string
                        type: object
                      clusterrolebinding:
                        properties:
                          lastUpdate:
                            description: Last time when k8s object was updated
                            format: date-time
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          resourceVersion:
                            description: Resource version of k8s object
                            type: string
                        type: object
                      egressSelectorConfiguration:
                        type: string
                      enabled:
                        type: boolean
                      kubeconfig:
                        description: KubeconfigStatus contains information about the
                          generated kubeconfig.
                        properties:
                          checksum:
                            type: string
                          lastUpdate:
                            format: date-time
                            type: string
                          secretName:
                            type: string
                        type: object
                      sa:
                        properties:
                          lastUpdate:
                            description: Last time when k8s object was updated
                            format: date-time
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          resourceVersion:
                            description: Resource version of k8s object
                            type: string
                        type: object
                      service:
                        description: KubernetesServiceStatus defines the status for
                          the Tenant Control Plane Service in the management cluster.
                        properties:
                          conditions:
                            description: Current service state
                            items:
                              description: "Condition contains details for one aspect
                                of the current state of this API Resource. --- This
                                struct is intended for direct use as an array at the
                                field path .status.conditions.  For example, type
                                FooStatus struct{     // Represents the observations
                                of a foo's current state.     // Known .status.conditions.type
                                are: \"Available\", \"Progressing\", and \"Degraded\"
                                \    // +patchMergeKey=type     // +patchStrategy=merge
                                \    // +listType=map     // +listMapKey=type     Conditions
                                []metav1.Condition `json:\"conditions,omitempty\"
                                patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                \n     // other fields }"
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time
                                    the condition transitioned from one status to
                                    another. This should be when the underlying condition
                                    changed.  If that is not known, then using the
                                    time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is a human readable message
                                    indicating details about the transition. This
                                    may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation
                                    that the condition was set based upon. For instance,
                                    if .metadata.generation is currently 12, but the
                                    .status.conditions[x].observedGeneration is 9,
                                    the condition is out of date with respect to the
                                    current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: reason contains a programmatic identifier
                                    indicating the reason for the condition's last
                                    transition. Producers of specific condition types
                                    may define expected values and meanings for this
                                    field, and whether the values are considered a
                                    guaranteed API. The value should be a CamelCase
                                    string. This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  enum:
                                  - "True"
                                  - "False"
                                  - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in
                                    foo.example.com/CamelCase. --- Many .condition.type
                                    values are consistent across resources like Available,
                                    but because arbitrary conditions can be useful
                                    (see .node.status.conditions), the ability to
                                    deconflict is important. The regex it matches
                                    is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                              - lastTransitionTime
                              - message
                              - reason
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          loadBalancer:
                            description: LoadBalancer contains the current status
                              of the load-balancer, if one is present.
                            properties:
                              ingress:
                                description: Ingress is a list containing ingress
                                  points for the load-balancer. Traffic intended for
                                  the service should be sent to these ingress points.
                                items:
                                  description: 'LoadBalancerIngress represents the
                                    status of a load-balancer ingress point: traffic
                                    intended for the service should be sent to an
                                    ingress point.'
                                  properties:
                                    hostname:
                                      description: Hostname is set for load-balancer
                                        ingress points that are DNS based (typically
                                        AWS load-balancers)
                                      type: string
                                    ip:
                                      description: IP is set for load-balancer ingress
                                        points that are IP based (typically GCE or
                                        OpenStack load-balancers)
                                      type: string
                                    ports:
                                      description: Ports is a list of records of service
                                        ports If used, every port defined in the service
                                        should have an entry in it
                                      items:
                                        properties:
                                          error:
                                            description: 'Error is to record the problem
                                              with the service port The format of
                                              the error shall comply with the following
                                              rules: - built-in error values shall
                                              be specified in this file and those
                                              shall use   CamelCase names - cloud
                                              provider specific error values must
                                              have names that comply with the   format
                                              foo.example.com/CamelCase. --- The regex
                                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                            maxLength: 316
                                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                            type: string
                                          port:
                                            description: Port is the port number of
                                              the service port of which status is
                                              recorded here
                                            format: int32
                                            type: integer
                                          protocol:
                                            default: TCP
                                            description: 'Protocol is the protocol
                                              of the service port of which status
                                              is recorded here The supported values
                                              are: "TCP", "UDP", "SCTP"'
                                            type: string
                                        required:
                                        - port
                                        - protocol
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                type: array
                            type: object
                          name:
                            description: The name of the Service for the given cluster.
                            type: string
                          namespace:
                            description: The namespace which the Service for the given
                              cluster is deployed.
                            type: string
                          port:
                            description: The port where the service is running
                            format: int32
                            type: integer
                        required:
                        - name
                        - namespace
                        - port
                        type: object
                    required:
                    - enabled
                    type: object
                  kubeProxy:
                    description: AddonStatus defines the observed state of an Addon.
                    properties:
                      checksum:
                        type: string
                      enabled:
                        type: boolean
                      lastUpdate:
                        format: date-time
                        type: string
                    required:
                    - enabled
                    type: object
                type: object
              certificates:
                description: Certificates contains information about the different
                  certificates that are necessary to run a kubernetes control plane
                properties:
                  apiServer:
                    description: CertificatePrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      resourceVersion:
                        type: string
                      secretName:
                        type: string
                    type: object
                  apiServerKubeletClient:
                    description: CertificatePrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      resourceVersion:
                        type: string
                      secretName:
                        type: string
                    type: object
                  ca:
                    description: CertificatePrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      resourceVersion:
                        type: string
                      secretName:
                        type: string
                    type: object
                  etcd:
                    description: ETCDCertificatesStatus defines the observed state
                      of ETCD Certificate for API server.
                    properties:
                      apiServer:
                        description: ETCDCertificateStatus defines the observed state
                          of ETCD Certificate for API server.
                        properties:
                          lastUpdate:
                            format: date-time
                            type: string
                          secretName:
                            type: string
                        type: object
                      ca:
                        description: ETCDCertificateStatus defines the observed state
                          of ETCD Certificate for API server.
                        properties:
                          lastUpdate:
                            format: date-time
                            type: string
                          secretName:
                            type: string
                        type: object
                    type: object
                  frontProxyCA:
                    description: CertificatePrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      resourceVersion:
                        type: string
                      secretName:
                        type: string
                    type: object
                  frontProxyClient:
                    description: CertificatePrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      resourceVersion:
                        type: string
                      secretName:
                        type: string
                    type: object
                  sa:
                    description: PublicKeyPrivateKeyPairStatus defines the status.
                    properties:
                      lastUpdate:
                        format: date-time
                        type: string
                      secretName:
                        type: string
                    type: object
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint contains the status of the kubernetes
                  control plane
                type: string
              kubeadmPhase:
                description: KubeadmPhase contains the status of the kubeadm phases
                  action
                properties:
                  bootstrapToken:
                    description: KubeadmPhaseStatus contains the status of a kubeadm
                      phase action.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                    type: object
                  uploadConfigKubeadm:
                    description: KubeadmPhaseStatus contains the status of a kubeadm
                      phase action.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                    type: object
                  uploadConfigKubelet:
                    description: KubeadmPhaseStatus contains the status of a kubeadm
                      phase action.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                    type: object
                required:
                - bootstrapToken
                - uploadConfigKubeadm
                - uploadConfigKubelet
                type: object
              kubeadmconfig:
                description: KubeadmConfig contains the status of the configuration
                  required by kubeadm
                properties:
                  checksum:
                    description: Checksum of the kubeadm configuration to detect changes
                    type: string
                  configmapName:
                    type: string
                  lastUpdate:
                    format: date-time
                    type: string
                type: object
              kubeconfig:
                description: KubeConfig contains information about the kubenconfigs
                  that control plane pieces need
                properties:
                  admin:
                    description: KubeconfigStatus contains information about the generated
                      kubeconfig.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                      secretName:
                        type: string
                    type: object
                  controllerManager:
                    description: KubeconfigStatus contains information about the generated
                      kubeconfig.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                      secretName:
                        type: string
                    type: object
                  scheduler:
                    description: KubeconfigStatus contains information about the generated
                      kubeconfig.
                    properties:
                      checksum:
                        type: string
                      lastUpdate:
                        format: date-time
                        type: string
                      secretName:
                        type: string
                    type: object
                type: object
              kubernetesResources:
                description: Kubernetes contains information about the reconciliation
                  of the required Kubernetes resources deployed in the admin cluster
                properties:
                  deployment:
                    description: KubernetesDeploymentStatus defines the status for
                      the Tenant Control Plane Deployment in the management cluster.
                    properties:
                      availableReplicas:
                        description: Total number of available pods (ready for at
                          least minReadySeconds) targeted by this deployment.
                        format: int32
                        type: integer
                      collisionCount:
                        description: Count of hash collisions for the Deployment.
                          The Deployment controller uses this field as a collision
                          avoidance mechanism when it needs to create the name for
                          the newest ReplicaSet.
                        format: int32
                        type: integer
                      conditions:
                        description: Represents the latest available observations
                          of a deployment's current state.
                        items:
                          description: DeploymentCondition describes the state of
                            a deployment at a certain point.
                          properties:
                            lastTransitionTime:
                              description: Last time the condition transitioned from
                                one status to another.
                              format: date-time
                              type: string
                            lastUpdateTime:
                              description: The last time this condition was updated.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of deployment condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      lastUpdate:
                        description: Last time when deployment was updated
                        format: date-time
                        type: string
                      name:
                        description: The name of the Deployment for the given cluster.
                        type: string
                      namespace:
                        description: The namespace which the Deployment for the given
                          cluster is deployed.
                        type: string
                      observedGeneration:
                        description: The generation observed by the deployment controller.
                        format: int64
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the number of pods targeted
                          by this Deployment with a Ready Condition.
                        format: int32
                        type: integer
                      replicas:
                        description: Total number of non-terminated pods targeted
                          by this deployment (their labels match the selector).
                        format: int32
                        type: integer
                      unavailableReplicas:
                        description: Total number of unavailable pods targeted by
                          this deployment. This is the total number of pods that are
                          still required for the deployment to have 100% available
                          capacity. They may either be pods that are running but not
                          yet available or pods that still have not been created.
                        format: int32
                        type: integer
                      updatedReplicas:
                        description: Total number of non-terminated pods targeted
                          by this deployment that have the desired template spec.
                        format: int32
                        type: integer
                    required:
                    - name
                    - namespace
                    type: object
                  ingress:
                    description: KubernetesIngressStatus defines the status for the
                      Tenant Control Plane Ingress in the management cluster.
                    properties:
                      loadBalancer:
                        description: LoadBalancer contains the current status of the
                          load-balancer.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngress represents the status
                                of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                hostname:
                                  description: Hostname is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                                ports:
                                  description: Ports is a list of records of service
                                    ports If used, every port defined in the service
                                    should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: 'Error is to record the problem
                                          with the service port The format of the
                                          error shall comply with the following rules:
                                          - built-in error values shall be specified
                                          in this file and those shall use   CamelCase
                                          names - cloud provider specific error values
                                          must have names that comply with the   format
                                          foo.example.com/CamelCase. --- The regex
                                          it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the
                                          service port of which status is recorded
                                          here
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: 'Protocol is the protocol of
                                          the service port of which status is recorded
                                          here The supported values are: "TCP", "UDP",
                                          "SCTP"'
                                        type: string
                                    required:
                                    - port
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                        type: object
                      name:
                        description: The name of the Ingress for the given cluster.
                        type: string
                      namespace:
                        description: The namespace which the Ingress for the given
                          cluster is deployed.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  service:
                    description: KubernetesServiceStatus defines the status for the
                      Tenant Control Plane Service in the management cluster.
                    properties:
                      conditions:
                        description: Current service state
                        items:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, type FooStatus struct{
                            \    // Represents the observations of a foo's current
                            state.     // Known .status.conditions.type are: \"Available\",
                            \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                            \    // +patchStrategy=merge     // +listType=map     //
                            +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                            patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n     // other fields }"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - type
                        x-kubernetes-list-type: map
                      loadBalancer:
                        description: LoadBalancer contains the current status of the
                          load-balancer, if one is present.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngress represents the status
                                of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                hostname:
                                  description: Hostname is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                                ports:
                                  description: Ports is a list of records of service
                                    ports If used, every port defined in the service
                                    should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: 'Error is to record the problem
                                          with the service port The format of the
                                          error shall comply with the following rules:
                                          - built-in error values shall be specified
                                          in this file and those shall use   CamelCase
                                          names - cloud provider specific error values
                                          must have names that comply with the   format
                                          foo.example.com/CamelCase. --- The regex
                                          it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the
                                          service port of which status is recorded
                                          here
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: 'Protocol is the protocol of
                                          the service port of which status is recorded
                                          here The supported values are: "TCP", "UDP",
                                          "SCTP"'
                                        type: string
                                    required:
                                    - port
                                    - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                        type: object
                      name:
                        description: The name of the Service for the given cluster.
                        type: string
                      namespace:
                        description: The namespace which the Service for the given
                          cluster is deployed.
                        type: string
                      port:
                        description: The port where the service is running
                        format: int32
                        type: integer
                    required:
                    - name
                    - namespace
                    - port
                    type: object
                  version:
                    description: KubernetesVersion contains the information regarding
                      the running Kubernetes version, and its upgrade status.
                    properties:
                      status:
                        default: Provisioning
                        description: Status returns the current status of the Kubernetes
                          version, such as its provisioning state, or completed upgrade.
                        enum:
                        - Provisioning
                        - Upgrading
                        - Ready
                        - NotReady
                        type: string
                      version:
                        description: Version is the running Kubernetes version of
                          the Tenant Control Plane.
                        type: string
                    required:
                    - status
                    type: object
                type: object
              storage:
                description: Storage Status contains information about Kubernetes
                  storage system
                properties:
                  etcd:
                    description: ETCDStatus defines the observed state of ETCDStatus.
                    properties:
                      role:
                        properties:
                          exists:
                            type: boolean
                          name:
                            type: string
                          permissions:
                            items:
                              properties:
                                key:
                                  type: string
                                rangeEnd:
                                  type: string
                                type:
                                  type: integer
                              type: object
                            type: array
                        required:
                        - exists
                        - name
                        type: object
                      user:
                        properties:
                          exists:
                            type: boolean
                          name:
                            type: string
                          roles:
                            items:
                              type: string
                            type: array
                        required:
                        - exists
                        - name
                        type: object
                    type: object
                  kineMySQL:
                    properties:
                      certificate:
                        properties:
                          lastUpdate:
                            format: date-time
                            type: string
                          resourceVersion:
                            type: string
                          secretName:
                            type: string
                        type: object
                      config:
                        properties:
                          resourceVersion:
                            type: string
                          secretName:
                            type: string
                        type: object
                      setup:
                        properties:
                          lastUpdate:
                            format: date-time
                            type: string
                          schema:
                            type: string
                          sqlConfigResourceVersion:
                            type: string
                          user:
                            type: string
                        type: object
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
